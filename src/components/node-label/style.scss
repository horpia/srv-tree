.node-label {
	$this: &;
	display: flex;
	align-items: flex-start;
	flex-direction: column;
	--bg-color: var(--color-wan-line);
	--bg-next-color: var(--color-lan-line);
	--bg-light-color: var(--color-wan-line-light);
	--txt-color: var(--color-wan-txt);
	min-height: calc(var(--size-line-height) * var(--lines, 1));
	position: relative;

	&_matched {
		& > #{$this}__buttons-group {
			outline: 3px dashed var(--color-highlight-search-3);
		}

		:root:root & {
			opacity: 1;
			filter: none;
		}

		&::before {
			content: "";
			z-index: -1;
			width: 100vw;
			margin-left: -100vw;
			position: absolute;
			margin-top: 1px;
			height: calc(var(--size-line-height) * 2);
			background: repeating-linear-gradient(
				45deg,
				var(--color-highlight-search-1),
				var(--color-highlight-search-1) 10px,
				var(--color-highlight-search-2) 10px,
				var(--color-highlight-search-2) 20px
			),;
		}
	}

	&_show-info {
		#{$this}__button {
			border-bottom: none;
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}

		#{$this}__info-button {
			background-color: var(--color-info-bg);
			border: 1px solid var(--color-info-brd);
			border-bottom: none;
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
			color: var(--color-info-txt-muted);

			&:hover {
				background-color: var(--color-info-bg-light);
			}
		}

		#{$this}__info {
			display: block;;
		}
	}

	&_empty {
		#{$this}__button {
			cursor: default;

			&:hover {
				background-color: var(--bg-color);
			}
		}

		#{$this}__v-line {
			display: none;
		}
	}

	&__v-line {
		order: 3;
		margin-left: calc(var(--indent-lg)
			+ ((var(--size-icon-size) - var(--size-connector-point)) / 2)
			+ (var(--size-connector-point) / 2) - 1px);
		border-right: 2px solid var(--bg-next-color);
		// используем calc чтобы отменить применение scss функции max.
		// данная калькуляция нужна, чтобы отменить рисование нижней линии
		// путем замены значения переменной --v-line-height
		height: calc(var(--size-line-height) * (var(--lines, 1) - 1));
		z-index: 1;
	}

	&__buttons-group {
		order: 1;
		display: flex;
		align-items: center;
	}

	&__button {
		display: flex;
		align-items: center;
		width: fit-content;
		background-color: var(--bg-color);
		border: 1px solid var(--bg-color);
		color: var(--txt-color);
		border-radius: var(--size-radius) 0 0 var(--size-radius);
		padding: var(--indent-lg);
		cursor: pointer;

		&:hover {
			background-color: var(--bg-light-color);
		}

		.icon {
			margin-right: var(--indent-md);
		}
	}

	&__info-button {
		display: flex;
		align-items: center;
		width: fit-content;
		background-color: var(--bg-color);
		border: 1px solid var(--bg-color);
		border-left-color: var(--bg-light-color);
		color: var(--txt-color);
		border-radius: 0 var(--size-radius) var(--size-radius) 0;
		padding: var(--indent-lg);
		cursor: pointer;

		&:hover {
			background-color: var(--bg-light-color);
		}
	}

	&__name {
		user-select: none;
		white-space: nowrap;
	}

	&__info {
		order: 2;
		display: none;
		margin-top: -1px;
		width: fit-content;
		min-width: var(--size-node-info-width);
		background-color: var(--color-info-bg);
		color: var(--color-info-txt);
		border: 1px solid var(--color-info-brd);
		padding: var(--indent-lg);
		border-bottom-left-radius: var(--size-radius);
		border-bottom-right-radius: var(--size-radius);

		&:empty {
			& + #{$this}__buttons-group {
				& > #{$this}__button {
					border-radius: var(--size-radius);
				}

				& > #{$this}__info-button {
					display: none;
				}
			}
		}
	}

	ul {
		margin: 0;
		padding: 0;
		display: flex;
		align-items: center;

		li {
			display: block;
			margin-right: var(--indent-xlg);

			span {

			}
		}
	}
}